If you've heard about Docker and want to know what it is or why to use it, here's a crash course in 60 seconds. Imagine you're writing a program, but you want it to run on different computers with different software. You could physically use a different computer, but that's expensive and impractical. You could use a virtual machine or dual boot a different operating system, but that takes up a lot of hard drive space. Instead, you can use Docker. Docker uses specialized instructions called Dockerfiles to describe a container. Think of these like mini virtual machines. We tell it what operating system to use, give instructions for programs to install or files to add to it, and then provide a command to run whenever it's started. First, we build it using docker build, then docker image ls to get the ID. The size is smaller than a traditional VM because Docker shares parts of our OS with each container. Now we bring it up by using docker run with the p flag to expose a port to our local computer. This container runs a full operating system and software stack, and we can even run multiple at a time without issue. This makes it handy for trying out different software locally or running multiple apps with different software versions all on one computer. 